{"version":3,"sources":["components/Scene/item.jsx","data/index.js","components/Scene/index.jsx","containers/app/App.jsx","utils/statistics/reportWebVitals.js","index.jsx"],"names":["Item","data","meshName","onChangeColor","React","useState","currentName","setCurrentName","map","color","colorName","price","id","className","style","borderColor","undefined","onClick","backgroundColor","memo","config","frame","rims","names","Scene3D","isSelectMesh","setIsSelectMesh","canvasRef","useRef","fpsRef","useEffect","engine","Engine","current","scene","createScene","events","name","cb","handleRemove","handleChangeMeshColor","runRenderLoop","render","textContent","getFps","toFixed","handleCustomEvents","Scene","clearColor","Color3","FromHexString","camera","ArcRotateCamera","Math","PI","Tools","ToRadians","Vector3","attachControl","lowerBetaLimit","beta","upperBetaLimit","lowerRadiusLimit","upperRadiusLimit","HemisphericLight","sceneLoadMesh","nameMesh","SceneLoader","ImportMesh","process","mesh","emitColorChangeEvent","event","CustomEvent","detail","window","dispatchEvent","addEventListener","bind","e","material","StandardMaterial","forEach","m","getMeshByID","diffuseColor","_","meshes","length","dispose","ref","width","height","background","src","alt","type","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b018892a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Item = ({ data, meshName, onChangeColor }) => {\n  const [currentName, setCurrentName] = React.useState('');\n\n  return (\n    data.map(({ color, colorName, price, id }) => (\n      <div key={id}>\n        <div\n          className='item' \n          style={{borderColor: currentName === colorName ? '#2c86fb' : undefined}}\n          onClick={() => {\n            onChangeColor(color, meshName);\n            setCurrentName(colorName);\n          }}\n        >\n          <span className='box-color' style={{backgroundColor: color}} />\n          <div className='content'>\n            <b>{colorName}</b>\n            <span>{price}</span>\n          </div>\n        </div>\n      </div>\n    ))\n  );\n}\n\nexport default React.memo(Item);","export const config = {\n\t\tframe: [\n\t\t\t{\n\t\t\t\tcolor: '#202020',\n\t\t\t\tcolorName: 'black',\n\t\t\t\tprice: 250.00,\n\t\t\t\tid: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolor: '#ffe505',\n\t\t\t\tcolorName: 'Yellow',\n\t\t\t\tprice: 180.00,\n\t\t\t\tid: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolor: '#fdbb00',\n\t\t\t\tcolorName: 'Orange',\n\t\t\t\tprice: 150.00,\n\t\t\t\tid: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolor: '#007997',\n\t\t\t\tcolorName: 'Blue',\n\t\t\t\tprice: 200.00,\n\t\t\t\tid: 4,\n\t\t\t}\n\t\t],\n\t\trims: [\n\t\t\t{\n\t\t\t\tcolor: '#f71601',\n\t\t\t\tcolorName: 'Red',\n\t\t\t\tprice: 250.00,\n\t\t\t\tid: 5,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolor: '#007997',\n\t\t\t\tcolorName: 'Blue',\n\t\t\t\tprice: 200.00,\n\t\t\t\tid: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolor: '#d7d7d7',\n\t\t\t\tcolorName: 'Grey',\n\t\t\t\tprice: 20.00,\n\t\t\t\tid: 7,\n\t\t\t},\n\t\t]\n};","import React from 'react'\nimport { \n  Scene, \n  Engine, \n  ArcRotateCamera, \n  Vector3,\n  SceneLoader,\n  HemisphericLight,\n  Tools,\n  Color3,\n  // ActionManager,\n  // ExecuteCodeAction,\n  StandardMaterial,\n} from '@babylonjs/core';\nimport \"@babylonjs/loaders\";\n\nimport Item from './item'\nimport { config } from '../../data';\nimport './style.scss'\n\nconst frame = {\n  frame: { names: ['MTB Full Suspension_primitive0', 'hardtail 1.0_primitive5'] },\n  rims: { names: ['MTB Full Suspension_primitive50', 'MTB Full Suspension_primitive29', 'hardtail 1.0_primitive41', ] },\n}\n\nconst Scene3D = () => {\n  const [isSelectMesh, setIsSelectMesh] = React.useState(false);\n  const canvasRef = React.useRef();\n  const fpsRef = React.useRef();\n\n  React.useEffect(() => {\n    const engine = new Engine(canvasRef.current, true, {}, true);\n    // engine.displayLoadingUI();\n\n    const scene = createScene(engine);\n    const events = [\n      {name: 'remove', cb: handleRemove},\n      {name: 'edit_palette', cb: handleChangeMeshColor},\n    ];\n    \n    engine.runRenderLoop(() => {\n      scene.render();\n      fpsRef.current.textContent = engine.getFps().toFixed() + \" fps\";\n    })\n\n    handleCustomEvents(events, scene);\n  }, []);\n\n  const createScene = (engine) => {\n    const scene = new Scene(engine);\n    scene.clearColor = new Color3.FromHexString(\"#ffffff\");\n\n    const camera = new ArcRotateCamera(\"Camera\", Math.PI * 2, Tools.ToRadians(80), 18, new Vector3( 0, 1, -1 ), scene);\n    // This makes the camera interactive\n    camera.attachControl(canvasRef.current, true);\n    camera.lowerBetaLimit = camera.beta - Tools.ToRadians(0)\n    camera.upperBetaLimit = camera.beta + Tools.ToRadians(0);\n    camera.lowerRadiusLimit = 15;\n    camera.upperRadiusLimit = 20;\n\n    new HemisphericLight('light', new Vector3(0,1,0), scene);\n    sceneLoadMesh(scene, 'bike2.glb');\n\n    return scene;\n  }\n\n  const sceneLoadMesh = (scene, nameMesh) => {\n    SceneLoader.ImportMesh(\"\", `${process.env.PUBLIC_URL}/assets/`, nameMesh, scene, (mesh) => {\n      // scene.onReadyObservable.add(() => {\n      //   const meshes = mesh.length;\n\n      //   for (let i = 0; i < meshes; i+=1) {\n      //     const el = mesh[i];\n      //     el.isPickable = true;\n      //     el.actionManager = new ActionManager(scene);\n      //     el.actionManager.registerAction(new ExecuteCodeAction(\n      //       ActionManager.OnPickTrigger, evt => {\n      //         console.log(evt.source.name, 'evt');\n      //       }\n      //     ))\n      //   }\n      // })\n    });\n  }\n\n  const emitColorChangeEvent = (color, meshName) => {\n    const params = {\n      detail: {\n        meshName,\n        color,\n      }\n    };\n\n  \tconst event = new CustomEvent('edit_palette', params);\n  \twindow.dispatchEvent(event)\n  }\n\n  const emitRemoveSceneChangeEvent = () => {\n  \tconst event = new CustomEvent('remove');\n  \twindow.dispatchEvent(event)\n  }\n\n  const handleCustomEvents = (events, scene) =>\n    events.map(event => \n      window.addEventListener(event.name, event.cb.bind(null, scene))\n    )\n\n  const handleChangeMeshColor = (scene, e) => {\n    const { detail:{ meshName, color } } = e;\n    const material = new StandardMaterial(scene);\n\n    meshName.forEach(m => {\n      const mesh = scene.getMeshByID(m);\n      if (mesh) {\n        mesh.material = material;\n        material.diffuseColor = new Color3.FromHexString(color);\n        return;\n      }\n    });\n  }\n\n  const handleRemove = (scene, _) => {\n    if (scene.meshes.length) {\n      scene.meshes.forEach(mesh => mesh.dispose());\n      sceneLoadMesh(scene, 'frame.glb');\n      setIsSelectMesh(true);\n    }\n  }\n\n  return (\n    <div className='root'>\n      <div className='fps' ref={fpsRef} />\n      <canvas ref={canvasRef} width={800} height={500} />\n      <div className='side-right'>\n        <div className='head'>Design your bicycle</div>\n        <div className='components'>\n          <div className='component'>\n            <h2>Frame</h2>\n            <Item\n              data={config.frame}\n              onChangeColor={emitColorChangeEvent}\n              meshName={frame.frame.names}\n            />\n          <div className='component'>\n            <h2>Rims</h2>\n            <Item\n              data={config.rims}\n              onChangeColor={emitColorChangeEvent}\n              meshName={frame.rims.names}\n            />\n          </div>\n          <div className=\"componnet\">\n            <h2>Body type</h2>\n            <div className=\"item\">\n            <span className='box-color' style={{background: '#f7f7f7'}}>\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/frame.png`} \n                alt=\"frame\" \n              />\n            </span>\n              <div className='content'>\n                <button \n                  type='button' \n                  onClick={emitRemoveSceneChangeEvent}\n                  disabled={isSelectMesh}\n                >\n                  + ADD\n                </button>\n                <b>Male frame</b>\n                <span>200.00 EUR</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n};\n\nexport default Scene3D;","import React from 'react'\n\nimport Scene3D from '../../components/Scene'\nimport '../../styles/index.scss';\n\nconst App = () => (\n  <Scene3D />\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            },\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CssBaseline } from '@material-ui/core';\nimport App from './containers/app/App'\nimport reportWebVitals from './utils/statistics/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <CssBaseline /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nreportWebVitals();\n"],"sourceRoot":""}